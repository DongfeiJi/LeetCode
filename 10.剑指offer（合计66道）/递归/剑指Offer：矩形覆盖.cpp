/*
我们可以用2*1的小矩形横着或者竖着去覆盖更大的矩形。
请问用n个2*1的小矩形无重叠地覆盖一个2*n的大矩形，总共有多少种方法？

我们先把2x8的覆盖方法记为f(8)。用第一个1x2小矩阵覆盖大矩形的最左边时有两个选择，竖着放或者横着放。
当竖着放的时候，右边还剩下2x7的区域，这种情况下的覆盖方法记为f(7)。
当横着放的情况，当1x2的小矩形横着放在左上角的时候，左下角也横着放，而在右边还剩下2x6的区域，此时覆盖方法记为f(6)。
因此f(8)=f(7)+f(6)。此时我们可以看出，这仍然是斐波那契数列。
dp方法：
1，状态定义：dp[i]表示当前2*i大矩形有多少种摆法
2，边界:dp[1]=1 dp[2]= 2
3，状态转移方程：dp[i] = dp[i-1] + dp[i-2]
*/
class Solution {
public:
    int rectCover(int number) {
        vector<int> dp(number + 1, 0);//定义dp数组
        dp[1] = 1, dp[2] = 2;//边界
        for(int i = 3; i <= number; i++){//循环迭代，从3开始到number
            dp[i] = dp[i-1] + dp[i-2];//状态转移方程
        }
        return dp[number];//返回所求
    }
};