/*
一只青蛙一次可以跳上1级台阶，也可以跳上2级……它也可以跳上n级。求该青蛙跳上一个n级的台阶总共有多少种跳法。

我想说，这青蛙真变态，真能跳。
当n=1时，结果为1；
当n=2时，结果为2；
当n=3时，结果为4；
以此类推，我们使用数学归纳法不难发现，跳法f(n)=2^(n-1)。
*/
class Solution {
public:
    int jumpFloorII(int number) {
        if(number == 0){//特殊输入0，返回0
            return 0;
        }
        //其实就是返回2^(number-1)，下面其实就是计算这个
        int total = 1;//定义初始为1
        for(int i = 1; i < number; i++){//这里考虑下下标，初始为1，下标就是从1开始，因为输入为1输出也为1
            total *= 2;//指数，用相乘连乘表示
        }
        return total;
    }
};